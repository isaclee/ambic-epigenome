#!/bin/bash

#SBATCH
#SBATCH --job-name=align
#SBATCH --nodes=1
# number of tasks (processes) per node
#SBATCH --ntasks-per-node=1
# number of cpus (threads) per task (process)
###SBATCH --cpus-per-task=24
#SBATCH --mail-type=end
#SBATCH --mail-user=ilee29@jhmi.edu
#SBATCH --time=8:0:0

# output directory should be set with -D option in sbatch command
while :
do
  case "$1" in
    -r | --reference) #reference
      ref=$2
      shift 2
      ;;
    -i | --input) #input
      in=$2
      shift 2
      ;;
    -a | --aligner) #which aligner?
      aligner=$2
      shift 2
      ;;
    -b | --basename) #base name optional; can be full path or just file name
      base=$2
      shift 2
      ;;
    --marcc) ## flag for marcc
      slurm=marcc
      shift 1
      ;;
    --aws) ##flag for aws
      slurm=aws
      shift 1
      ;;
    --samarg) ##samtools argument; optional
      samarg=$2
      shift 2
      ;;
    *) break
      ;;
  esac
done

if [ -z "$base" ];then
  base=$(basename $in)
  base=${base%%.*}
  echo "prefix: $PWD/$base"
else
  echo "prefix: $base"
fi

echo "starting job $SLURM_JOBID : alignment of $in"

case "$slurm" in
  marcc)
    srcdir=/home-2/ilee29@jhu.edu/Code
    module load samtools
    samtools=samtools
    t=24
    ;;
  aws)
    srcdir=/shared/Code
    bindir=$srcdir/bin
    export PATH=$bindir:$PATH
    samtools=samtools
    t=36
    ;;
esac

case "$aligner" in
  ngmlr)
    echo "using ngmlr to align"
    args="-t $t -r ${ref} -q ${in} -x ont"
    src=${srcdir}/ngmlr/bin/ngmlr-*/ngmlr
    ;;
  bwa)
    echo "using bwa mem to align"
    args="-t $t -x ont2d ${ref} ${in}"
    src="bwa mem"
    ;;
  minimap2)
    echo "using minimap2 to align"
    refind=${ref%.*}.mmi
    if [ ! -e $refind ];then
      echo "make index first with : minimap2 -d ref.mmi ref.fa"
      exit
    fi
    args="-ax map-ont -t $t $refind $in"
    src=${srcdir}/minimap2*/minimap2
    ;;
esac

echo "$src $args"
$src $args | \
  $samtools view $samarg -b - | \
  $samtools sort -o ${base}.sorted.bam
$samtools index ${base}.sorted.bam

## index stats
$samtools idxstats ${base}.sorted.bam > ${base}.idxstats.txt
awk '{ sum+= $3 }END { print "aligned =",sum,"unaligned =",$4,"fraction =",sum/(sum+$4) }' ${base}.idxstats.txt

echo "Finished with job $SLURM_JOBID : alignment of $base"
